<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_custom_device_8cs" kind="file" language="C#">
    <compoundname>CustomDevice.cs</compoundname>
    <innerclass refid="struct_custom_device_state" prot="public">CustomDeviceState</innerclass>
    <innerclass refid="class_custom_device" prot="public">CustomDevice</innerclass>
    <innernamespace refid="namespace_system_1_1_runtime_1_1_interop_services">System::Runtime::InteropServices</innernamespace>
    <innernamespace refid="namespace_unity_engine_1_1_input_system_1_1_controls">UnityEngine::InputSystem::Controls</innernamespace>
    <innernamespace refid="namespace_unity_engine_1_1_input_system_1_1_low_level">UnityEngine::InputSystem::LowLevel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Runtime.InteropServices;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.Controls;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.Layouts;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.LowLevel;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.Utilities;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_editor" kindref="compound">UnityEditor</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>input<sp/>system<sp/>stores<sp/>a<sp/>chunk<sp/>of<sp/>memory<sp/>for<sp/>each<sp/>device.<sp/>What<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>memory<sp/>looks<sp/>like<sp/>we<sp/>can<sp/>determine<sp/>ourselves.<sp/>The<sp/>easiest<sp/>way<sp/>is<sp/>to<sp/>just<sp/>describe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>as<sp/>a<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>chunk<sp/>of<sp/>memory<sp/>is<sp/>tagged<sp/>with<sp/>a<sp/>&quot;format&quot;<sp/>identifier<sp/>in<sp/>the<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>&quot;FourCC&quot;<sp/>(a<sp/>32-bit<sp/>code<sp/>comprised<sp/>of<sp/>four<sp/>characters).<sp/>Using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IInputStateTypeInfo<sp/>we<sp/>allow<sp/>the<sp/>system<sp/>to<sp/>get<sp/>to<sp/>the<sp/>FourCC<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>our<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct_custom_device_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_custom_device_state" kindref="compound">CustomDeviceState</ref><sp/>:<sp/>IInputStateTypeInfo</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>&quot;CUST&quot;<sp/>here<sp/>as<sp/>our<sp/>custom<sp/>format<sp/>code.<sp/>It<sp/>can<sp/>be<sp/>anything<sp/>really.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>sufficiently<sp/>unique<sp/>to<sp/>identify<sp/>our<sp/>memory<sp/>format,<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_custom_device_state_1ab04688ea3d2074af6b7f727469f52b60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FourCC<sp/><ref refid="struct_custom_device_state_1ab04688ea3d2074af6b7f727469f52b60" kindref="member">format</ref><sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FourCC(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>we<sp/>just<sp/>define<sp/>fields<sp/>that<sp/>store<sp/>the<sp/>state<sp/>for<sp/>our<sp/>input<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>only<sp/>thing<sp/>really<sp/>interesting<sp/>here<sp/>is<sp/>the<sp/>[InputControl]<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>automatically<sp/>attach<sp/>InputControls<sp/>to<sp/>the<sp/>various<sp/>memory<sp/>bits<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>define.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>started,<sp/>let&apos;s<sp/>say<sp/>that<sp/>our<sp/>device<sp/>has<sp/>a<sp/>bitfield<sp/>of<sp/>buttons.<sp/>Each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>indicates<sp/>whether<sp/>a<sp/>certain<sp/>button<sp/>is<sp/>pressed<sp/>or<sp/>not.<sp/>For<sp/>the<sp/>sake<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>demonstration,<sp/>let&apos;s<sp/>say<sp/>our<sp/>device<sp/>has<sp/>16<sp/>possible<sp/>buttons.<sp/>So,<sp/>we<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>ushort<sp/>field<sp/>that<sp/>contains<sp/>the<sp/>state<sp/>of<sp/>each<sp/>possible<sp/>button<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>top<sp/>of<sp/>that,<sp/>we<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>input<sp/>system<sp/>about<sp/>each<sp/>button.<sp/>Both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>to<sp/>call<sp/>it<sp/>and<sp/>where<sp/>to<sp/>find<sp/>it.<sp/>The<sp/>&quot;name&quot;<sp/>property<sp/>tells<sp/>the<sp/>input<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>to<sp/>call<sp/>the<sp/>control;<sp/>the<sp/>&quot;layout&quot;<sp/>property<sp/>tells<sp/>it<sp/>what<sp/>type<sp/>of<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>create<sp/>(&quot;Button&quot;<sp/>in<sp/>our<sp/>case);<sp/>and<sp/>the<sp/>&quot;bit&quot;<sp/>property<sp/>tells<sp/>it<sp/>which<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>bitfield<sp/>corresponds<sp/>to<sp/>the<sp/>button.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>also<sp/>tell<sp/>the<sp/>input<sp/>system<sp/>about<sp/>&quot;display<sp/>names&quot;<sp/>here.<sp/>These<sp/>are<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>get<sp/>displayed<sp/>in<sp/>the<sp/>UI<sp/>and<sp/>such.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;firstButton&quot;</highlight><highlight class="normal">,<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Button&quot;</highlight><highlight class="normal">,<sp/>bit<sp/>=<sp/>0,<sp/>displayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>Button&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;secondButton&quot;</highlight><highlight class="normal">,<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Button&quot;</highlight><highlight class="normal">,<sp/>bit<sp/>=<sp/>1,<sp/>displayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>Button&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;thirdButton&quot;</highlight><highlight class="normal">,<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Button&quot;</highlight><highlight class="normal">,<sp/>bit<sp/>=<sp/>2,<sp/>displayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Third<sp/>Button&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="49" refid="struct_custom_device_state_1a6488dff9118f92a652b36eec630cbc99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ushort<sp/><ref refid="struct_custom_device_state_1a6488dff9118f92a652b36eec630cbc99" kindref="member">buttons</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>say<sp/>our<sp/>device<sp/>also<sp/>has<sp/>a<sp/>stick.<sp/>However,<sp/>the<sp/>stick<sp/>isn&apos;t<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simply<sp/>as<sp/>two<sp/>floats<sp/>but<sp/>as<sp/>two<sp/>unsigned<sp/>bytes<sp/>with<sp/>the<sp/>midpoint<sp/>of<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>located<sp/>at<sp/>value<sp/>127.<sp/>We<sp/>can<sp/>simply<sp/>define<sp/>two<sp/>consecutive<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fields<sp/>to<sp/>represent<sp/>the<sp/>stick<sp/>and<sp/>annotate<sp/>them<sp/>like<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>let&apos;s<sp/>introduce<sp/>stick<sp/>control<sp/>itself.<sp/>This<sp/>one<sp/>is<sp/>simple.<sp/>We<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yet<sp/>worry<sp/>about<sp/>X<sp/>and<sp/>Y<sp/>individually<sp/>as<sp/>the<sp/>stick<sp/>as<sp/>whole<sp/>will<sp/>itself<sp/>read<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>component<sp/>values<sp/>from<sp/>those<sp/>controls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>set<sp/>&quot;format&quot;<sp/>here<sp/>too<sp/>as<sp/>InputControlLayout<sp/>will<sp/>otherwise<sp/>try<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>infer<sp/>the<sp/>memory<sp/>format<sp/>from<sp/>the<sp/>field.<sp/>As<sp/>we<sp/>put<sp/>this<sp/>attribute<sp/>on<sp/>&quot;X&quot;,<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>come<sp/>out<sp/>as<sp/>&quot;BYTE&quot;<sp/>--<sp/>which<sp/>we<sp/>don&apos;t<sp/>want.<sp/>So<sp/>we<sp/>set<sp/>it<sp/>to<sp/>&quot;VC2B&quot;<sp/>(a<sp/>Vector2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>bytes).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_custom_device_state_1ab04688ea3d2074af6b7f727469f52b60" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;VC2B&quot;</highlight><highlight class="normal">,<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stick&quot;</highlight><highlight class="normal">,<sp/>displayName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Main<sp/>Stick&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>that&apos;s<sp/>what<sp/>we<sp/>need<sp/>next.<sp/>By<sp/>default,<sp/>both<sp/>X<sp/>and<sp/>Y<sp/>on<sp/>&quot;Stick&quot;<sp/>are<sp/>floating-point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>controls<sp/>so<sp/>here<sp/>we<sp/>need<sp/>to<sp/>individually<sp/>configure<sp/>them<sp/>the<sp/>way<sp/>they<sp/>work<sp/>for<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>don&apos;t<sp/>mention<sp/>things<sp/>as<sp/>&quot;layout&quot;<sp/>and<sp/>such<sp/>here.<sp/>The<sp/>reason<sp/>is<sp/>that<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifying<sp/>a<sp/>control<sp/>already<sp/>defined<sp/>by<sp/>&quot;Stick&quot;.<sp/>This<sp/>means<sp/>that<sp/>we<sp/>only<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>set<sp/>the<sp/>values<sp/>that<sp/>are<sp/>different<sp/>from<sp/>what<sp/>&quot;Stick&quot;<sp/>stick<sp/>itself<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>configures.<sp/>And<sp/>since<sp/>&quot;Stick&quot;<sp/>configures<sp/>both<sp/>&quot;X&quot;<sp/>and<sp/>&quot;Y&quot;<sp/>to<sp/>be<sp/>&quot;Axis&quot;<sp/>controls,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>that<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>&quot;format&quot;,<sp/>we<sp/>tell<sp/>the<sp/>controls<sp/>how<sp/>their<sp/>data<sp/>is<sp/>stored.<sp/>As<sp/>bytes<sp/>in<sp/>our<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>use<sp/>&quot;BYTE&quot;<sp/>(check<sp/>the<sp/>documentation<sp/>for<sp/>InputStateBlock<sp/>for<sp/>details<sp/>on<sp/>that).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>don&apos;t<sp/>use<sp/>&quot;SBYT&quot;<sp/>(signed<sp/>byte)<sp/>here.<sp/>Our<sp/>values<sp/>are<sp/>not<sp/>signed.<sp/>They<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned.<sp/>It&apos;s<sp/>just<sp/>that<sp/>our<sp/>&quot;resting&quot;<sp/>(i.e.<sp/>mid)<sp/>point<sp/>is<sp/>at<sp/>127<sp/>and<sp/>not<sp/>at<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>we<sp/>use<sp/>&quot;defaultState&quot;<sp/>to<sp/>tell<sp/>the<sp/>system<sp/>that<sp/>in<sp/>our<sp/>case,<sp/>setting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>to<sp/>all<sp/>zeroes<sp/>will<sp/>*NOT*<sp/>result<sp/>in<sp/>a<sp/>default<sp/>value.<sp/>Instead,<sp/>if<sp/>both<sp/>x<sp/>and<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>set<sp/>to<sp/>zero,<sp/>the<sp/>result<sp/>will<sp/>be<sp/>Vector2(-1,-1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>then,<sp/>using<sp/>the<sp/>various<sp/>&quot;normalize&quot;<sp/>parameters,<sp/>we<sp/>tell<sp/>the<sp/>input<sp/>system<sp/>how<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deal<sp/>with<sp/>the<sp/>fact<sp/>that<sp/>our<sp/>midpoint<sp/>is<sp/>located<sp/>smack<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>our<sp/>value<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>&quot;normalize&quot;<sp/>(which<sp/>is<sp/>equivalent<sp/>to<sp/>&quot;normalize=true&quot;)<sp/>we<sp/>instruct<sp/>the<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>normalize<sp/>values.<sp/>Using<sp/>&quot;normalizeZero=0.5&quot;,<sp/>we<sp/>tell<sp/>it<sp/>that<sp/>our<sp/>midpoint<sp/>is<sp/>located</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>0.5<sp/>(AxisControl<sp/>will<sp/>convert<sp/>the<sp/>BYTE<sp/>value<sp/>to<sp/>a<sp/>[0..1]<sp/>floating-point<sp/>value<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0=0<sp/>and<sp/>255=1)<sp/>and<sp/>that<sp/>our<sp/>lower<sp/>limit<sp/>is<sp/>&quot;normalizeMin=0&quot;<sp/>and<sp/>our<sp/>upper<sp/>limit<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;normalizeMax=1&quot;.<sp/>Put<sp/>another<sp/>way,<sp/>it<sp/>will<sp/>map<sp/>[0..1]<sp/>to<sp/>[-1..1].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>we<sp/>also<sp/>set<sp/>&quot;offset&quot;<sp/>here<sp/>as<sp/>this<sp/>is<sp/>already<sp/>set<sp/>by<sp/>StickControl.X<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>StickControl.Y<sp/>--<sp/>which<sp/>we<sp/>inherit.<sp/>Note<sp/>that<sp/>because<sp/>we&apos;re<sp/>looking<sp/>at<sp/>child<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>stick,<sp/>the<sp/>offset<sp/>is<sp/>relative<sp/>to<sp/>the<sp/>stick,<sp/>not<sp/>relative<sp/>to<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>state<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick/x&quot;</highlight><highlight class="normal">,<sp/>defaultState<sp/>=<sp/>127,<sp/><ref refid="struct_custom_device_state_1ab04688ea3d2074af6b7f727469f52b60" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BYTE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;normalize,normalizeMin=0,normalizeMax=1,normalizeZero=0.5&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="100" refid="struct_custom_device_state_1a40c53392d93bd45fe38eaa3d5902ce1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="struct_custom_device_state_1a40c53392d93bd45fe38eaa3d5902ce1c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick/y&quot;</highlight><highlight class="normal">,<sp/>defaultState<sp/>=<sp/>127,<sp/><ref refid="struct_custom_device_state_1ab04688ea3d2074af6b7f727469f52b60" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BYTE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;normalize,normalizeMin=0,normalizeMax=1,normalizeZero=0.5&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>stick<sp/>up/down/left/right<sp/>buttons<sp/>automatically<sp/>use<sp/>the<sp/>state<sp/>set<sp/>up<sp/>for<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>Y<sp/>but<sp/>they<sp/>have<sp/>their<sp/>own<sp/>parameters.<sp/>Thus<sp/>we<sp/>need<sp/>to<sp/>also<sp/>sync<sp/>them<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>parameter<sp/>settings<sp/>we<sp/>need<sp/>for<sp/>our<sp/>BYTE<sp/>setup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>is<sp/>a<sp/>shortcoming<sp/>in<sp/>the<sp/>current<sp/>layout<sp/>system<sp/>that<sp/>cannot<sp/>yet<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>merge<sp/>parameters.<sp/>Will<sp/>be<sp/>fixed<sp/>in<sp/>a<sp/>future<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick/up&quot;</highlight><highlight class="normal">,<sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;normalize,normalizeMin=0,normalizeMax=1,normalizeZero=0.5,clamp=2,clampMin=0,clampMax=1&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick/down&quot;</highlight><highlight class="normal">,<sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;normalize,normalizeMin=0,normalizeMax=1,normalizeZero=0.5,clamp=2,clampMin=-1,clampMax=0,invert&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick/left&quot;</highlight><highlight class="normal">,<sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;normalize,normalizeMin=0,normalizeMax=1,normalizeZero=0.5,clamp=2,clampMin=-1,clampMax=0,invert&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stick/right&quot;</highlight><highlight class="normal">,<sp/>parameters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;normalize,normalizeMin=0,normalizeMax=1,normalizeZero=0.5,clamp=2,clampMin=0,clampMax=1&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="113" refid="struct_custom_device_state_1af0651600144608c36e255af0bc90a209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/><ref refid="struct_custom_device_state_1af0651600144608c36e255af0bc90a209" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we<sp/>have<sp/>the<sp/>state<sp/>struct<sp/>all<sp/>sorted<sp/>out,<sp/>we<sp/>have<sp/>a<sp/>way<sp/>to<sp/>lay<sp/>out<sp/>the<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>our<sp/>device<sp/>and<sp/>we<sp/>have<sp/>a<sp/>way<sp/>to<sp/>map<sp/>InputControls<sp/>to<sp/>pieces<sp/>of<sp/>that<sp/>memory.<sp/>What</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>still<sp/>missing,<sp/>however,<sp/>is<sp/>a<sp/>way<sp/>to<sp/>represent<sp/>our<sp/>device<sp/>as<sp/>a<sp/>whole<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>that,<sp/>we<sp/>start<sp/>with<sp/>a<sp/>class<sp/>derived<sp/>from<sp/>InputDevice.<sp/>We<sp/>could<sp/>also<sp/>base<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>something<sp/>like<sp/>Mouse<sp/>or<sp/>Gamepad<sp/>in<sp/>case<sp/>our<sp/>device<sp/>is<sp/>an<sp/>instance<sp/>of<sp/>one<sp/>of<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>types<sp/>but<sp/>for<sp/>this<sp/>demonstration,<sp/>let&apos;s<sp/>assume<sp/>our<sp/>device<sp/>is<sp/>nothing<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>those<sp/>devices<sp/>(if<sp/>we<sp/>base<sp/>our<sp/>devices<sp/>on<sp/>those<sp/>layouts,<sp/>we<sp/>have<sp/>to<sp/>correctly<sp/>map<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>controls<sp/>we<sp/>inherit<sp/>from<sp/>those<sp/>devices).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Other<sp/>than<sp/>deriving<sp/>from<sp/>InputDevice,<sp/>there<sp/>are<sp/>two<sp/>other<sp/>noteworthy<sp/>things<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>one,<sp/>we<sp/>want<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>call<sp/>to<sp/>InputSystem.RegisterLayout<sp/>happens<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>startup.<sp/>Doing<sp/>so<sp/>ensures<sp/>that<sp/>the<sp/>layout<sp/>is<sp/>known<sp/>to<sp/>the<sp/>input<sp/>system<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>thus<sp/>appears<sp/>in<sp/>the<sp/>control<sp/>picker.<sp/>So<sp/>we<sp/>use<sp/>[InitializeOnLoad]<sp/>and<sp/>[RuntimeInitializeOnLoadMethod]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>here<sp/>to<sp/>ensure<sp/>initialization<sp/>in<sp/>both<sp/>the<sp/>editor<sp/>and<sp/>the<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also,<sp/>we<sp/>use<sp/>the<sp/>[InputControlLayout]<sp/>attribute<sp/>here.<sp/>This<sp/>attribute<sp/>is<sp/>optional<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>types<sp/>that<sp/>are<sp/>used<sp/>as<sp/>layouts<sp/>in<sp/>the<sp/>input<sp/>system.<sp/>In<sp/>our<sp/>case,<sp/>we<sp/>have<sp/>to<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>tell<sp/>the<sp/>input<sp/>system<sp/>about<sp/>the<sp/>state<sp/>struct<sp/>we<sp/>are<sp/>using<sp/>to<sp/>define<sp/>the<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>layout<sp/>we<sp/>are<sp/>using<sp/>and<sp/>the<sp/>controls<sp/>tied<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">[InitializeOnLoad]<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>static<sp/>class<sp/>constructor<sp/>in<sp/>editor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">[InputControlLayout(stateType<sp/>=<sp/>typeof(<ref refid="struct_custom_device_state" kindref="compound">CustomDeviceState</ref>))]</highlight></codeline>
<codeline lineno="142" refid="class_custom_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_custom_device" kindref="compound">CustomDevice</ref><sp/>:<sp/>InputDevice,<sp/>IInputUpdateCallbackReceiver</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[InitializeOnLoad]<sp/>will<sp/>ensure<sp/>this<sp/>gets<sp/>called<sp/>on<sp/>every<sp/>domain<sp/>(re)load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>editor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_custom_device" kindref="compound">CustomDevice</ref>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>our<sp/>RegisterLayout<sp/>code<sp/>in<sp/>the<sp/>editor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>player,<sp/>[RuntimeInitializeOnLoadMethod]<sp/>will<sp/>make<sp/>sure<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>code<sp/>gets<sp/>called<sp/>during<sp/>startup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>[RuntimeInitializeOnLoadMethod]</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>our<sp/>device<sp/>with<sp/>the<sp/>input<sp/>system.<sp/>We<sp/>also<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>&quot;device<sp/>matcher&quot;<sp/>here.<sp/>These<sp/>are<sp/>used<sp/>when<sp/>a<sp/>device<sp/>is<sp/>discovered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>input<sp/>system.<sp/>Each<sp/>device<sp/>is<sp/>described<sp/>by<sp/>an<sp/>InputDeviceDescription</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>an<sp/>InputDeviceMatcher<sp/>can<sp/>be<sp/>used<sp/>to<sp/>match<sp/>specific<sp/>properties<sp/>of<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>description.<sp/>See<sp/>the<sp/>documentation<sp/>of<sp/>InputDeviceMatcher<sp/>for<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>In<sp/>case<sp/>your<sp/>device<sp/>is<sp/>more<sp/>dynamic<sp/>in<sp/>nature<sp/>and<sp/>cannot<sp/>have<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>layout,<sp/>there<sp/>is<sp/>also<sp/>the<sp/>possibility<sp/>to<sp/>build<sp/>layouts<sp/>on<sp/>the<sp/>fly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>out<sp/>the<sp/>API<sp/>documentation<sp/>for<sp/>InputSystem.onFindLayoutForDevice<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>InputSystem.RegisterLayoutBuilder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputSystem.RegisterLayout&lt;<ref refid="class_custom_device" kindref="compound">CustomDevice</ref>&gt;(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputDeviceMatcher()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.WithInterface(</highlight><highlight class="stringliteral">&quot;Custom&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>our<sp/>device<sp/>is<sp/>fully<sp/>functional<sp/>at<sp/>this<sp/>point,<sp/>we<sp/>can<sp/>refine<sp/>the<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>it<sp/>a<sp/>little<sp/>bit.<sp/>One<sp/>thing<sp/>we<sp/>can<sp/>do<sp/>is<sp/>expose<sp/>the<sp/>controls<sp/>for<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>directly.<sp/>While<sp/>anyone<sp/>can<sp/>look<sp/>up<sp/>our<sp/>controls<sp/>using<sp/>strings,<sp/>exposing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>controls<sp/>as<sp/>properties<sp/>makes<sp/>it<sp/>simpler<sp/>to<sp/>work<sp/>with<sp/>the<sp/>device<sp/>in<sp/>script.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_custom_device_1a753cb7ee984c2a1e720f11b37c9377a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ButtonControl<sp/><ref refid="class_custom_device_1a753cb7ee984c2a1e720f11b37c9377a5" kindref="member">firstButton</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="181" refid="class_custom_device_1aa49c8a93fe4e40dca0814d8867d21a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ButtonControl<sp/><ref refid="class_custom_device_1aa49c8a93fe4e40dca0814d8867d21a47" kindref="member">secondButton</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="182" refid="class_custom_device_1a2257fbe5cfbe72b30de0000b5b4ea977" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ButtonControl<sp/><ref refid="class_custom_device_1a2257fbe5cfbe72b30de0000b5b4ea977" kindref="member">thirdButton</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="183" refid="class_custom_device_1aa80dcd2f4cda6dd5873e60f17d8fa7b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StickControl<sp/><ref refid="class_custom_device_1aa80dcd2f4cda6dd5873e60f17d8fa7b9" kindref="member">stick</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FinishSetup<sp/>is<sp/>where<sp/>our<sp/>device<sp/>setup<sp/>is<sp/>finalized.<sp/>Here<sp/>we<sp/>can<sp/>look<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>controls<sp/>that<sp/>have<sp/>been<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_custom_device_1aeeb415864d2144c23a79eb20a304ac7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_custom_device_1aeeb415864d2144c23a79eb20a304ac7c" kindref="member">FinishSetup</ref>()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.FinishSetup();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_custom_device_1a753cb7ee984c2a1e720f11b37c9377a5" kindref="member">firstButton</ref><sp/>=<sp/>GetChildControl&lt;ButtonControl&gt;(</highlight><highlight class="stringliteral">&quot;firstButton&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_custom_device_1aa49c8a93fe4e40dca0814d8867d21a47" kindref="member">secondButton</ref><sp/>=<sp/>GetChildControl&lt;ButtonControl&gt;(</highlight><highlight class="stringliteral">&quot;secondButton&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_custom_device_1a2257fbe5cfbe72b30de0000b5b4ea977" kindref="member">thirdButton</ref><sp/>=<sp/>GetChildControl&lt;ButtonControl&gt;(</highlight><highlight class="stringliteral">&quot;thirdButton&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_custom_device_1aa80dcd2f4cda6dd5873e60f17d8fa7b9" kindref="member">stick</ref><sp/>=<sp/>GetChildControl&lt;StickControl&gt;(</highlight><highlight class="stringliteral">&quot;stick&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>expose<sp/>a<sp/>&apos;.current&apos;<sp/>getter<sp/>equivalent<sp/>to<sp/>&apos;Gamepad.current&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whenever<sp/>our<sp/>device<sp/>receives<sp/>input,<sp/>MakeCurrent()<sp/>is<sp/>called.<sp/>So<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simply<sp/>update<sp/>a<sp/>&apos;.current&apos;<sp/>getter<sp/>based<sp/>on<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_custom_device_1ae1b49d794eb6da41858f1b7f623ee6d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_custom_device" kindref="compound">CustomDevice</ref><sp/><ref refid="class_custom_device_1ae1b49d794eb6da41858f1b7f623ee6d6" kindref="member">current</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="201" refid="class_custom_device_1af7b575df41b7afd718c6b8557c006243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_custom_device_1af7b575df41b7afd718c6b8557c006243" kindref="member">MakeCurrent</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.MakeCurrent();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_custom_device_1ae1b49d794eb6da41858f1b7f623ee6d6" kindref="member">current</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>one<sp/>of<sp/>our<sp/>custom<sp/>devices<sp/>is<sp/>removed,<sp/>we<sp/>want<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>the<sp/>&apos;.current&apos;<sp/>device,<sp/>we<sp/>null<sp/>out<sp/>&apos;.current&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_custom_device_1a9b0bedafc96ee73592531bc5762e6e26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_custom_device_1a9b0bedafc96ee73592531bc5762e6e26" kindref="member">OnRemoved</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnRemoved();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_custom_device_1ae1b49d794eb6da41858f1b7f623ee6d6" kindref="member">current</ref><sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_custom_device_1ae1b49d794eb6da41858f1b7f623ee6d6" kindref="member">current</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>this<sp/>is<sp/>all<sp/>great<sp/>and<sp/>nice.<sp/>But<sp/>we<sp/>have<sp/>one<sp/>problem.<sp/>No<sp/>one<sp/>is<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>creating<sp/>an<sp/>instance<sp/>of<sp/>our<sp/>device<sp/>yet.<sp/>Which<sp/>means<sp/>that<sp/>while<sp/>we<sp/>can<sp/>bind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>controls<sp/>on<sp/>the<sp/>device<sp/>from<sp/>actions<sp/>all<sp/>we<sp/>want,<sp/>at<sp/>runtime<sp/>we<sp/>will<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>receive<sp/>input<sp/>from<sp/>our<sp/>custom<sp/>device.<sp/>For<sp/>that<sp/>to<sp/>happen,<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>device<sp/>is<sp/>created<sp/>at<sp/>some<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>one&apos;s<sp/>a<sp/>bit<sp/>tricky.<sp/>Because<sp/>it<sp/>really<sp/>depends<sp/>on<sp/>how<sp/>the<sp/>device<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>discovered<sp/>in<sp/>practice.<sp/>In<sp/>most<sp/>real-world<sp/>scenarios,<sp/>there<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>external<sp/>API<sp/>that<sp/>notifies<sp/>us<sp/>when<sp/>a<sp/>device<sp/>under<sp/>its<sp/>domain<sp/>is<sp/>added<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed.<sp/>In<sp/>response,<sp/>we<sp/>would<sp/>report<sp/>a<sp/>device<sp/>being<sp/>added<sp/>(using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InputSystem.AddDevice(new<sp/>InputDeviceDescription<sp/>{<sp/>...<sp/>})<sp/>or<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(using<sp/>DeviceRemoveEvent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>demonstration,<sp/>we<sp/>don&apos;t<sp/>have<sp/>an<sp/>external<sp/>API<sp/>to<sp/>query.<sp/>And<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>really<sp/>have<sp/>another<sp/>criteria<sp/>by<sp/>which<sp/>to<sp/>determine<sp/>when<sp/>a<sp/>device<sp/>of<sp/>our<sp/>custom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>should<sp/>be<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>let&apos;s<sp/>fake<sp/>it<sp/>here.<sp/>First,<sp/>to<sp/>create<sp/>the<sp/>device,<sp/>we<sp/>simply<sp/>add<sp/>a<sp/>menu<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>editor.<sp/>Means<sp/>that<sp/>in<sp/>the<sp/>player,<sp/>this<sp/>device<sp/>will<sp/>never<sp/>be<sp/>functional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>this<sp/>serves<sp/>as<sp/>a<sp/>demonstration<sp/>only<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Nothing<sp/>of<sp/>the<sp/>following<sp/>is<sp/>necessary<sp/>if<sp/>you<sp/>have<sp/>a<sp/>device<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>detected<sp/>and<sp/>sent<sp/>input<sp/>for<sp/>by<sp/>the<sp/>Unity<sp/>runtime<sp/>itself,<sp/>i.e.<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>picked<sp/>up<sp/>from<sp/>the<sp/>underlying<sp/>platform<sp/>APIs<sp/>by<sp/>Unity<sp/>itself.<sp/>In<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>case,<sp/>when<sp/>your<sp/>device<sp/>is<sp/>connected,<sp/>Unity<sp/>will<sp/>automatically<sp/>report<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputDeviceDescription<sp/>and<sp/>all<sp/>you<sp/>have<sp/>to<sp/>do<sp/>is<sp/>make<sp/>sure<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputDeviceMatcher<sp/>you<sp/>supply<sp/>to<sp/>RegisterLayout<sp/>matches<sp/>that<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Also,<sp/>IInputUpdateCallbackReceiver<sp/>and<sp/>any<sp/>other<sp/>manual<sp/>queuing<sp/>of<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>unnecessary<sp/>in<sp/>that<sp/>case<sp/>as<sp/>Unity<sp/>will<sp/>queue<sp/>input<sp/>for<sp/>the<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>[MenuItem(</highlight><highlight class="stringliteral">&quot;Tools/Custom<sp/>Device<sp/>Sample/Create<sp/>Device&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateDevice()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>code<sp/>that<sp/>you<sp/>would<sp/>normally<sp/>run<sp/>at<sp/>the<sp/>point<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>discover<sp/>devices<sp/>of<sp/>your<sp/>custom<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputSystem.AddDevice(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InputDeviceDescription</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interfaceName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Custom&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Sample<sp/>Product&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>completeness<sp/>sake,<sp/>let&apos;s<sp/>also<sp/>add<sp/>code<sp/>to<sp/>remove<sp/>one<sp/>instance<sp/>of<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>custom<sp/>device.<sp/>Note<sp/>that<sp/>you<sp/>can<sp/>also<sp/>manually<sp/>remove<sp/>the<sp/>device<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>input<sp/>debugger<sp/>by<sp/>right-clicking<sp/>in<sp/>and<sp/>selecting<sp/>&quot;Remove<sp/>Device&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>[MenuItem(</highlight><highlight class="stringliteral">&quot;Tools/Custom<sp/>Device<sp/>Sample/Remove<sp/>Device&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveDevice()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>customDevice<sp/>=<sp/>InputSystem.devices.FirstOrDefault(x<sp/>=&gt;<sp/>x<sp/>is<sp/><ref refid="class_custom_device" kindref="compound">CustomDevice</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(customDevice<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputSystem.RemoveDevice(customDevice);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>the<sp/>other<sp/>part<sp/>we<sp/>need<sp/>is<sp/>to<sp/>actually<sp/>feed<sp/>input<sp/>for<sp/>the<sp/>device.<sp/>Notice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>already<sp/>have<sp/>the<sp/>IInputUpdateCallbackReceiver<sp/>interface<sp/>on<sp/>our<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>What<sp/>this<sp/>does<sp/>is<sp/>to<sp/>add<sp/>an<sp/>OnUpdate<sp/>method<sp/>that<sp/>will<sp/>automatically<sp/>be<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>input<sp/>system<sp/>whenever<sp/>it<sp/>updates<sp/>(actually,<sp/>it<sp/>will<sp/>be<sp/>called<sp/>*before*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>updates,<sp/>i.e.<sp/>from<sp/>the<sp/>same<sp/>point<sp/>that<sp/>InputSystem.onBeforeUpdate<sp/>triggers).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>we<sp/>can<sp/>feed<sp/>input<sp/>to<sp/>our<sp/>devices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>don&apos;t<sp/>have<sp/>to<sp/>do<sp/>this<sp/>here.<sp/>InputSystem.QueueEvent<sp/>can<sp/>be<sp/>called<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>anywhere,<sp/>including<sp/>from<sp/>threads.<sp/>So<sp/>if,<sp/>for<sp/>example,<sp/>you<sp/>have<sp/>a<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread<sp/>polling<sp/>input<sp/>from<sp/>your<sp/>device,<sp/>that&apos;s<sp/>where<sp/>you<sp/>can<sp/>also<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>input<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Again,<sp/>we<sp/>don&apos;t<sp/>have<sp/>actual<sp/>input<sp/>to<sp/>read<sp/>here.<sp/>So<sp/>we<sp/>just<sp/>make<sp/>up<sp/>some<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>demonstration.<sp/>We<sp/>just<sp/>poll<sp/>the<sp/>keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>poll<sp/>the<sp/>keyboard<sp/>here<sp/>as<sp/>part<sp/>of<sp/>our<sp/>OnUpdate.<sp/>Remember,<sp/>however,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>we<sp/>run<sp/>our<sp/>OnUpdate<sp/>from<sp/>onBeforeUpdate,<sp/>i.e.<sp/>from<sp/>where<sp/>keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>processed.<sp/>This<sp/>means<sp/>that<sp/>our<sp/>input<sp/>will<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>one<sp/>frame<sp/>late.<sp/>Plus,<sp/>because<sp/>we<sp/>are<sp/>polling<sp/>the<sp/>keyboard<sp/>state<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>a<sp/>frame-to-frame<sp/>basis,<sp/>we<sp/>may<sp/>miss<sp/>inputs<sp/>on<sp/>the<sp/>keyboard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>One<sp/>thing<sp/>we<sp/>could<sp/>instead<sp/>is<sp/>to<sp/>actually<sp/>use<sp/>OnScreenControls<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>represent<sp/>the<sp/>controls<sp/>of<sp/>our<sp/>device<sp/>and<sp/>then<sp/>use<sp/>that<sp/>to<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>from<sp/>actual<sp/>human<sp/>interaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_custom_device_1a0d3e7e4061fb57df82bd3282daa5400c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_custom_device_1a0d3e7e4061fb57df82bd3282daa5400c" kindref="member">OnUpdate</ref>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>keyboard<sp/>=<sp/>Keyboard.current;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_custom_device_state" kindref="compound">CustomDeviceState</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.x<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.y<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>It<sp/>may<sp/>be<sp/>tempting<sp/>to<sp/>simply<sp/>store<sp/>some<sp/>state<sp/>related<sp/>to<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directly<sp/>on<sp/>the<sp/>device.<sp/>For<sp/>example,<sp/>let&apos;s<sp/>say<sp/>we<sp/>want<sp/>scale<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>from<sp/>WASD<sp/>to<sp/>a<sp/>certain<sp/>length<sp/>which<sp/>can<sp/>be<sp/>adjusted<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>scroll<sp/>wheel<sp/>of<sp/>the<sp/>mouse.<sp/>It<sp/>seems<sp/>natural<sp/>to<sp/>just<sp/>store<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>strength<sp/>as<sp/>a<sp/>private<sp/>field<sp/>on<sp/>CustomDevice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>will<sp/>*NOT*<sp/>work<sp/>correctly.<sp/>*All*<sp/>input<sp/>state<sp/>must<sp/>be<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>under<sp/>the<sp/>domain<sp/>of<sp/>the<sp/>input<sp/>system.<sp/>InputDevices<sp/>themselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cannot<sp/>private<sp/>store<sp/>their<sp/>own<sp/>separate<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>What<sp/>you<sp/>*can*<sp/>do<sp/>however,<sp/>is<sp/>simply<sp/>add<sp/>fields<sp/>your<sp/>state<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CustomDeviceState<sp/>in<sp/>our<sp/>case)<sp/>that<sp/>contain<sp/>the<sp/>state<sp/>you<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>keep.<sp/>It<sp/>is<sp/>not<sp/>necessary<sp/>to<sp/>expose<sp/>these<sp/>as<sp/>InputControls<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>you<sp/>don&apos;t<sp/>want<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>WASD<sp/>to<sp/>stick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>wPressed<sp/>=<sp/>keyboard.wKey.isPressed;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>aPressed<sp/>=<sp/>keyboard.aKey.isPressed;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>sPressed<sp/>=<sp/>keyboard.sKey.isPressed;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dPressed<sp/>=<sp/>keyboard.dKey.isPressed;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aPressed)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.x<sp/>-=<sp/>127;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dPressed)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.x<sp/>+=<sp/>127;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wPressed)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.y<sp/>+=<sp/>127;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sPressed)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.y<sp/>-=<sp/>127;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>buttons<sp/>to<sp/>1,<sp/>2,<sp/>and<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard.digit1Key.isPressed)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.buttons<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard.digit2Key.isPressed)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.buttons<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboard.digit3Key.isPressed)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.buttons<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>queue<sp/>the<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>are<sp/>replacing<sp/>the<sp/>current<sp/>device<sp/>state<sp/>wholesale<sp/>here.<sp/>An<sp/>alternative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>would<sp/>be<sp/>to<sp/>use<sp/>QueueDeltaStateEvent<sp/>to<sp/>replace<sp/>only<sp/>select<sp/>memory<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputSystem.QueueStateEvent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>state);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_SSDSPEEDUP/2021/clone/gps1_manadesigner/GPS1-Manadesigner/Assets/Samples/Input System/1.0.2/Custom Device/CustomDevice.cs"/>
  </compounddef>
</doxygen>
