<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_timed_param_state_behavior_8cs" kind="file" language="C#">
    <compoundname>TimedParamStateBehavior.cs</compoundname>
    <innerclass refid="class_timed_param_state_behavior" prot="public">TimedParamStateBehavior</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ref:<sp/>https://youtu.be/BHs7IqQSuSc?list=PLPYO_4PaVtLU-cxSTYaIGpK3PbBMDbldU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_timed_param_state_behavior" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_timed_param_state_behavior" kindref="compound">TimedParamStateBehavior</ref><sp/>:<sp/>StateMachineBehaviour</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9" refid="class_timed_param_state_behavior_1a6f456d268124eec95763ccf1dc09b97c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_set_param_state_data" kindref="compound">SetParamStateData</ref><sp/><ref refid="class_timed_param_state_behavior_1a6f456d268124eec95763ccf1dc09b97c" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="10" refid="class_timed_param_state_behavior_1a553e0d9444447c6ad3bb26ca1a1e223a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timed_param_state_behavior_1a7d383f1de1482b70e81c670a35749bbe" kindref="member">Start</ref>,<sp/><ref refid="class_timed_param_state_behavior_1a553e0d9444447c6ad3bb26ca1a1e223a" kindref="member">End</ref>;<sp/></highlight><highlight class="comment">//<sp/>Animation<sp/>percentage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_waitForExit;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_onTransitionExitTriggered;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnStateEnter<sp/>is<sp/>called<sp/>when<sp/>a<sp/>transition<sp/>starts<sp/>and<sp/>the<sp/>state<sp/>machine<sp/>starts<sp/>to<sp/>evaluate<sp/>this<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_timed_param_state_behavior_1a17f3d621193c677eb10199a96a0fef21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timed_param_state_behavior_1a17f3d621193c677eb10199a96a0fef21" kindref="member">OnStateEnter</ref>(Animator<sp/>animator,<sp/>AnimatorStateInfo<sp/>stateInfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerIndex)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_waitForExit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_onTransitionExitTriggered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//animator.SetBool(data.paramName,<sp/>!data.setDefaultState);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_set_param_state_data" kindref="compound">SetParamStateData</ref>.<ref refid="class_set_param_state_data_1a3fce2a3b74e4e01bdf8c97d267023f25" kindref="member">SetAnimatorParamDatas</ref>(<ref refid="class_timed_param_state_behavior_1a6f456d268124eec95763ccf1dc09b97c" kindref="member">data</ref>,<sp/>animator,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>invert<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnStateUpdate<sp/>is<sp/>called<sp/>on<sp/>each<sp/>Update<sp/>frame<sp/>between<sp/>OnStateEnter<sp/>and<sp/>OnStateExit<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_timed_param_state_behavior_1a5104771534ba2df328c50ac2a3dec512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timed_param_state_behavior_1a5104771534ba2df328c50ac2a3dec512" kindref="member">OnStateUpdate</ref>(Animator<sp/>animator,<sp/>AnimatorStateInfo<sp/>stateInfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerIndex)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CheckOnTransitionExit(animator,<sp/>layerIndex))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnStateTransitionExit(animator);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_onTransitionExitTriggered<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>stateInfo.normalizedTime<sp/>&gt;=<sp/><ref refid="class_timed_param_state_behavior_1a7d383f1de1482b70e81c670a35749bbe" kindref="member">Start</ref><sp/>&amp;&amp;<sp/>stateInfo.normalizedTime<sp/>&lt;=<sp/><ref refid="class_timed_param_state_behavior_1a553e0d9444447c6ad3bb26ca1a1e223a" kindref="member">End</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//animator.SetBool(data.paramName,<sp/>data.setDefaultState);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_set_param_state_data" kindref="compound">SetParamStateData</ref>.<ref refid="class_set_param_state_data_1a3fce2a3b74e4e01bdf8c97d267023f25" kindref="member">SetAnimatorParamDatas</ref>(<ref refid="class_timed_param_state_behavior_1a6f456d268124eec95763ccf1dc09b97c" kindref="member">data</ref>,<sp/>animator,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>invert<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnStateTransitionExit(Animator<sp/>animator)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_set_param_state_data" kindref="compound">SetParamStateData</ref>.<ref refid="class_set_param_state_data_1a3fce2a3b74e4e01bdf8c97d267023f25" kindref="member">SetAnimatorParamDatas</ref>(<ref refid="class_timed_param_state_behavior_1a6f456d268124eec95763ccf1dc09b97c" kindref="member">data</ref>,<sp/>animator,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>revert<sp/>to<sp/>original<sp/>value<sp/>//<sp/>bool<sp/>invert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnStateExit<sp/>is<sp/>called<sp/>when<sp/>a<sp/>transition<sp/>ends<sp/>and<sp/>the<sp/>state<sp/>machine<sp/>finishes<sp/>evaluating<sp/>this<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_timed_param_state_behavior_1a72a1b5b9d0a234efc96b4f85e37b3e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timed_param_state_behavior_1a72a1b5b9d0a234efc96b4f85e37b3e8d" kindref="member">OnStateExit</ref>(Animator<sp/>animator,<sp/>AnimatorStateInfo<sp/>stateInfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerIndex)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_onTransitionExitTriggered<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//animator.SetBool(paramName,<sp/>!data.setDefaultState);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_set_param_state_data" kindref="compound">SetParamStateData</ref>.<ref refid="class_set_param_state_data_1a3fce2a3b74e4e01bdf8c97d267023f25" kindref="member">SetAnimatorParamDatas</ref>(<ref refid="class_timed_param_state_behavior_1a6f456d268124eec95763ccf1dc09b97c" kindref="member">data</ref>,<sp/>animator,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>invert<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckOnTransitionExit(Animator<sp/>animator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerIndex)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_waitForExit<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>animator.GetAnimatorTransitionInfo(layerIndex).fullPathHash<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_waitForExit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_onTransitionExitTriggered<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>_waitForExit<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>animator.IsInTransition(layerIndex))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_onTransitionExitTriggered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnStateMove<sp/>is<sp/>called<sp/>right<sp/>after<sp/>Animator.OnAnimatorMove()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//override<sp/>public<sp/>void<sp/>OnStateMove(Animator<sp/>animator,<sp/>AnimatorStateInfo<sp/>stateInfo,<sp/>int<sp/>layerIndex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Implement<sp/>code<sp/>that<sp/>processes<sp/>and<sp/>affects<sp/>root<sp/>motion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnStateIK<sp/>is<sp/>called<sp/>right<sp/>after<sp/>Animator.OnAnimatorIK()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//override<sp/>public<sp/>void<sp/>OnStateIK(Animator<sp/>animator,<sp/>AnimatorStateInfo<sp/>stateInfo,<sp/>int<sp/>layerIndex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Implement<sp/>code<sp/>that<sp/>sets<sp/>up<sp/>animation<sp/>IK<sp/>(inverse<sp/>kinematics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_SSDSPEEDUP/2021/clone/gps1_manadesigner/GPS1-Manadesigner/Assets/_UtilsV0.4/MyScripts/_Utils/_CommonV0.2/Animator/TimedParamStateBehavior.cs"/>
  </compounddef>
</doxygen>
