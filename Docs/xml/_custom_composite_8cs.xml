<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_custom_composite_8cs" kind="file" language="C#">
    <compoundname>CustomComposite.cs</compoundname>
    <innerclass refid="class_custom_composite" prot="public">CustomComposite</innerclass>
    <innernamespace refid="namespace_unity_engine_1_1_input_system_1_1_layouts">UnityEngine::InputSystem::Layouts</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.Layouts;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.Utilities;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_editor" kindref="compound">UnityEditor</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.<ref refid="namespace_unity_engine_1_1_input_system" kindref="compound">InputSystem</ref>.Editor;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>say<sp/>we<sp/>want<sp/>to<sp/>have<sp/>a<sp/>composite<sp/>that<sp/>takes<sp/>an<sp/>axis<sp/>and<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>value<sp/>to<sp/>multiply<sp/>the<sp/>length<sp/>of<sp/>a<sp/>vector<sp/>from<sp/>a<sp/>stick.<sp/>This<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>used,<sp/>for<sp/>example,<sp/>to<sp/>have<sp/>the<sp/>right<sp/>trigger<sp/>on<sp/>the<sp/>gamepad<sp/>act<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>strength<sp/>multiplier<sp/>on<sp/>the<sp/>value<sp/>of<sp/>the<sp/>left<sp/>stick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>start<sp/>by<sp/>creating<sp/>a<sp/>class<sp/>that<sp/>is<sp/>based<sp/>on<sp/>InputBindingComposite&lt;&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>we<sp/>give<sp/>it<sp/>is<sp/>the<sp/>type<sp/>of<sp/>value<sp/>that<sp/>we<sp/>will<sp/>compute.<sp/>In<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>case,<sp/>we<sp/>will<sp/>consume<sp/>a<sp/>Vector2<sp/>from<sp/>the<sp/>stick<sp/>so<sp/>that<sp/>is<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>value<sp/>we<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>By<sp/>advertising<sp/>the<sp/>type<sp/>of<sp/>value<sp/>we<sp/>return,<sp/>we<sp/>also<sp/>allow<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>system<sp/>to<sp/>filter<sp/>out<sp/>our<sp/>composite<sp/>if<sp/>it<sp/>is<sp/>not<sp/>applicable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>a<sp/>specific<sp/>type<sp/>of<sp/>action.<sp/>For<sp/>example,<sp/>if<sp/>an<sp/>action<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>&quot;Value&quot;<sp/>as<sp/>its<sp/>type<sp/>and<sp/>its<sp/>&quot;Control<sp/>Type&quot;<sp/>is<sp/>set<sp/>to<sp/>&quot;Axis&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>our<sp/>composite<sp/>will<sp/>not<sp/>be<sp/>shown<sp/>as<sp/>our<sp/>value<sp/>type<sp/>(Vector2)<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>incompatible<sp/>with<sp/>the<sp/>value<sp/>type<sp/>of<sp/>Axis<sp/>(float).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also,<sp/>we<sp/>need<sp/>to<sp/>register<sp/>our<sp/>composite<sp/>with<sp/>the<sp/>input<sp/>system.<sp/>And<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>want<sp/>to<sp/>do<sp/>it<sp/>in<sp/>a<sp/>way<sp/>that<sp/>makes<sp/>the<sp/>composite<sp/>visible<sp/>in<sp/>the<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>editor<sp/>of<sp/>the<sp/>input<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>that<sp/>to<sp/>happen,<sp/>we<sp/>need<sp/>to<sp/>call<sp/>InputSystem.RegisterBindingComposite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sometime<sp/>during<sp/>startup.<sp/>We<sp/>make<sp/>that<sp/>happen<sp/>by<sp/>using<sp/>[InitializeOnLoad]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>editor<sp/>and<sp/>[RuntimeInitializeOnLoadMethod]<sp/>in<sp/>the<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">[InitializeOnLoad]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>customize<sp/>the<sp/>way<sp/>display<sp/>strings<sp/>are<sp/>formed<sp/>for<sp/>our<sp/>composite<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>annotating<sp/>it<sp/>with<sp/>DisplayStringFormatAttribute.<sp/>The<sp/>string<sp/>is<sp/>simply<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>list<sp/>with<sp/>elements<sp/>to<sp/>be<sp/>replaced<sp/>enclosed<sp/>in<sp/>curly<sp/>braces.<sp/>Everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outside<sp/>those<sp/>will<sp/>taken<sp/>verbatim.<sp/>The<sp/>fragments<sp/>inside<sp/>the<sp/>curly<sp/>braces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>refer<sp/>to<sp/>the<sp/>binding<sp/>composite<sp/>parts<sp/>by<sp/>name.<sp/>Each<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instance<sp/>is<sp/>replaced<sp/>with<sp/>the<sp/>display<sp/>text<sp/>for<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part<sp/>binding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">[DisplayStringFormat(</highlight><highlight class="stringliteral">&quot;{multiplier}*{stick}&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="46" refid="class_custom_composite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_custom_composite" kindref="compound">CustomComposite</ref><sp/>:<sp/>InputBindingComposite&lt;Vector2&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>editor,<sp/>the<sp/>static<sp/>class<sp/>constructor<sp/>will<sp/>be<sp/>called<sp/>on<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>of<sp/>[InitializeOnLoad].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_custom_composite" kindref="compound">CustomComposite</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>our<sp/>RegisterBindingComposite<sp/>code<sp/>in<sp/>the<sp/>editor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>player,<sp/>[RuntimeInitializeOnLoadMethod]<sp/>will<sp/>make<sp/>sure<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>code<sp/>gets<sp/>called<sp/>during<sp/>startup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>[RuntimeInitializeOnLoadMethod]</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>registers<sp/>the<sp/>composite<sp/>with<sp/>the<sp/>input<sp/>system.<sp/>After<sp/>calling<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>method,<sp/>we<sp/>can<sp/>have<sp/>bindings<sp/>reference<sp/>the<sp/>composite.<sp/>Also,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>composite<sp/>will<sp/>show<sp/>up<sp/>in<sp/>the<sp/>action<sp/>editor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>don&apos;t<sp/>supply<sp/>a<sp/>name<sp/>for<sp/>the<sp/>composite<sp/>here.<sp/>The<sp/>default<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>take<sp/>the<sp/>name<sp/>of<sp/>the<sp/>type<sp/>(&quot;CustomComposite&quot;<sp/>in<sp/>our<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>snip<sp/>off<sp/>&quot;Composite&quot;<sp/>if<sp/>used<sp/>as<sp/>a<sp/>suffix<sp/>(which<sp/>is<sp/>the<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>us)<sp/>and<sp/>then<sp/>use<sp/>that<sp/>as<sp/>the<sp/>name.<sp/>So<sp/>in<sp/>our<sp/>case,<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>registering<sp/>a<sp/>composite<sp/>called<sp/>&quot;Custom&quot;<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>we<sp/>were<sp/>to<sp/>use<sp/>our<sp/>composite<sp/>with<sp/>the<sp/>AddCompositeBinding<sp/>API,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>example,<sp/>it<sp/>would<sp/>look<sp/>like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>myAction.AddCompositeBinding(&quot;Custom&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.With(&quot;Stick&quot;,<sp/>&quot;&lt;Gamepad&gt;/leftStick&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.With(&quot;Multiplier&quot;,<sp/>&quot;&lt;Gamepad&gt;/rightTrigger&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputSystem.RegisterBindingComposite&lt;<ref refid="class_custom_composite" kindref="compound">CustomComposite</ref>&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>we<sp/>need<sp/>two<sp/>parts<sp/>for<sp/>our<sp/>composite.<sp/>The<sp/>part<sp/>that<sp/>delivers<sp/>the<sp/>stick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>and<sp/>the<sp/>part<sp/>that<sp/>delivers<sp/>the<sp/>axis<sp/>multiplier.<sp/>Note<sp/>that<sp/>each<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>bound<sp/>to<sp/>multiple<sp/>controls.<sp/>The<sp/>input<sp/>system<sp/>handles<sp/>that<sp/>for<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>giving<sp/>us<sp/>an<sp/>integer<sp/>identifier<sp/>for<sp/>each<sp/>part<sp/>that<sp/>reads<sp/>a<sp/>single<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>however<sp/>many<sp/>controls<sp/>are<sp/>bound<sp/>to<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>case,<sp/>this<sp/>could<sp/>be<sp/>used,<sp/>for<sp/>example,<sp/>to<sp/>bind<sp/>the<sp/>&quot;multiplier&quot;<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>both<sp/>the<sp/>left<sp/>and<sp/>the<sp/>right<sp/>trigger<sp/>on<sp/>the<sp/>gamepad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>tell<sp/>the<sp/>input<sp/>system<sp/>of<sp/>a<sp/>&quot;part&quot;<sp/>binding<sp/>that<sp/>we<sp/>need<sp/>for<sp/>a<sp/>composite,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>add<sp/>a<sp/>public<sp/>field<sp/>with<sp/>an<sp/>&quot;int&quot;<sp/>type<sp/>and<sp/>annotated<sp/>with<sp/>an<sp/>[InputControl]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute.<sp/>We<sp/>set<sp/>the<sp/>&quot;layout&quot;<sp/>property<sp/>on<sp/>the<sp/>attribute<sp/>to<sp/>tell<sp/>the<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>kind<sp/>of<sp/>control<sp/>we<sp/>expect<sp/>to<sp/>be<sp/>bound<sp/>to<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>These<sp/>part<sp/>binding<sp/>need<sp/>to<sp/>be<sp/>*public<sp/>fields*<sp/>for<sp/>the<sp/>input<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>find<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>this<sp/>is<sp/>introduces<sp/>a<sp/>part<sp/>to<sp/>the<sp/>composite<sp/>called<sp/>&quot;multiplier&quot;<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expecting<sp/>an<sp/>&quot;Axis&quot;<sp/>control.<sp/>The<sp/>value<sp/>of<sp/>the<sp/>field<sp/>will<sp/>be<sp/>set<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>system.<sp/>It<sp/>will<sp/>be<sp/>some<sp/>internal,<sp/>unique<sp/>numeric<sp/>ID<sp/>for<sp/>the<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>can<sp/>then<sp/>use<sp/>with<sp/>InputBindingCompositeContext.ReadValue<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>out<sp/>the<sp/>value<sp/>of<sp/>just<sp/>that<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Axis&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="106" refid="class_custom_composite_1aae42a5cd9b9eb8ac0f5e302ef0fc86c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_custom_composite_1aae42a5cd9b9eb8ac0f5e302ef0fc86c5" kindref="member">multiplier</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>part<sp/>we<sp/>need<sp/>is<sp/>for<sp/>the<sp/>stick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>We<sp/>could<sp/>use<sp/>&quot;Stick&quot;<sp/>here<sp/>but<sp/>&quot;Vector2&quot;<sp/>is<sp/>a<sp/>little<sp/>less<sp/>restrictive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>[InputControl(layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Vector2&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="112" refid="class_custom_composite_1a04bae8f7a89f6541ef0d298bb3c47013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_custom_composite_1a04bae8f7a89f6541ef0d298bb3c47013" kindref="member">stick</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>also<sp/>expose<sp/>&quot;parameters&quot;<sp/>on<sp/>our<sp/>composite.<sp/>These<sp/>can<sp/>be<sp/>configured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>graphically<sp/>in<sp/>the<sp/>action<sp/>editor<sp/>and<sp/>also<sp/>through<sp/>AddCompositeBinding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>say<sp/>we<sp/>want<sp/>to<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>specify<sp/>an<sp/>additional<sp/>scale<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>value<sp/>of<sp/>&quot;multiplier&quot;.<sp/>We<sp/>can<sp/>do<sp/>so<sp/>by<sp/>simply<sp/>adding<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>field<sp/>of<sp/>type<sp/>float.<sp/>Any<sp/>public<sp/>field<sp/>that<sp/>is<sp/>not<sp/>annotated<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[InputControl]<sp/>will<sp/>be<sp/>treated<sp/>as<sp/>a<sp/>possible<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>added<sp/>a<sp/>composite<sp/>with<sp/>AddCompositeBinding,<sp/>we<sp/>could<sp/>configure<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>like<sp/>so:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>myAction.AddCompositeBinding(&quot;Custom(scaleFactor=0.5)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.With(&quot;Multiplier&quot;,<sp/>&quot;&lt;Gamepad&gt;/rightTrigger&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.With(&quot;Stick&quot;,<sp/>&quot;&lt;Gamepad&gt;/leftStick&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_custom_composite_1afb97b7bbc54c62bc0cb336e88dc10faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_custom_composite_1afb97b7bbc54c62bc0cb336e88dc10faa" kindref="member">scaleFactor</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ok,<sp/>so<sp/>now<sp/>we<sp/>have<sp/>all<sp/>the<sp/>configuration<sp/>in<sp/>place.<sp/>The<sp/>final<sp/>piece<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>is<sp/>the<sp/>actual<sp/>logic<sp/>that<sp/>reads<sp/>input<sp/>from<sp/>&quot;multiplier&quot;<sp/>and<sp/>&quot;stick&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>computes<sp/>a<sp/>final<sp/>input<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>do<sp/>that<sp/>by<sp/>defining<sp/>a<sp/>ReadValue<sp/>method<sp/>which<sp/>is<sp/>the<sp/>actual<sp/>workhorse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>our<sp/>composite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_custom_composite_1aa92ebf9a307e3d1a9ef09feed24e2303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>Vector2<sp/><ref refid="class_custom_composite_1aa92ebf9a307e3d1a9ef09feed24e2303" kindref="member">ReadValue</ref>(ref<sp/>InputBindingCompositeContext<sp/>context)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>read<sp/>input<sp/>from<sp/>the<sp/>parts<sp/>we<sp/>have<sp/>by<sp/>simply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>supplying<sp/>the<sp/>part<sp/>IDs<sp/>that<sp/>the<sp/>input<sp/>system<sp/>has<sp/>set<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>us<sp/>to<sp/>ReadValue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Vector2<sp/>is<sp/>a<sp/>less<sp/>straightforward<sp/>than<sp/>primitive<sp/>value<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>like<sp/>int<sp/>and<sp/>float.<sp/>If<sp/>there<sp/>are<sp/>multiple<sp/>controls<sp/>bound<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;stick&quot;<sp/>part,<sp/>we<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>input<sp/>system<sp/>which<sp/>one<sp/>to<sp/>pick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>do<sp/>so<sp/>by<sp/>giving<sp/>it<sp/>an<sp/>IComparer.<sp/>In<sp/>this<sp/>case,<sp/>we<sp/>choose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2MagnitudeComparer<sp/>to<sp/>return<sp/>the<sp/>Vector2<sp/>with<sp/>the<sp/>greatest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>stickValue<sp/>=<sp/>context.ReadValue&lt;Vector2,<sp/>Vector2MagnitudeComparer&gt;(<ref refid="class_custom_composite_1a04bae8f7a89f6541ef0d298bb3c47013" kindref="member">stick</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>multiplierValue<sp/>=<sp/>context.ReadValue&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(<ref refid="class_custom_composite_1aae42a5cd9b9eb8ac0f5e302ef0fc86c5" kindref="member">multiplier</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rest<sp/>is<sp/>simple.<sp/>We<sp/>just<sp/>scale<sp/>the<sp/>vector<sp/>we<sp/>read<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>from<sp/>the<sp/>axis<sp/>and<sp/>apply<sp/>our<sp/>scale<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stickValue<sp/>*<sp/>(multiplierValue<sp/>*<sp/><ref refid="class_custom_composite_1afb97b7bbc54c62bc0cb336e88dc10faa" kindref="member">scaleFactor</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>custom<sp/>composite<sp/>is<sp/>complete<sp/>and<sp/>fully<sp/>functional.<sp/>We<sp/>could<sp/>stop<sp/>here<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>call<sp/>it<sp/>a<sp/>day.<sp/>However,<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>demonstration,<sp/>let&apos;s<sp/>say<sp/>we<sp/>also<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>customize<sp/>how<sp/>the<sp/>parameters<sp/>for<sp/>our<sp/>composite<sp/>are<sp/>edited.<sp/>We<sp/>have<sp/>&quot;scaleFactor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>let&apos;s<sp/>say<sp/>we<sp/>want<sp/>to<sp/>replace<sp/>the<sp/>default<sp/>float<sp/>inspector<sp/>with<sp/>a<sp/>slider.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>replace<sp/>the<sp/>default<sp/>UI<sp/>by<sp/>simply<sp/>deriving<sp/>a<sp/>custom<sp/>InputParameterEditor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>our<sp/>composite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CustomCompositeEditor<sp/>:<sp/>InputParameterEditor&lt;CustomComposite&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnGUI()</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>the<sp/>&apos;target&apos;<sp/>property,<sp/>we<sp/>can<sp/>access<sp/>an<sp/>instance<sp/>of<sp/>our<sp/>composite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>currentValue<sp/>=<sp/>target.scaleFactor;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>easiest<sp/>way<sp/>to<sp/>lay<sp/>out<sp/>our<sp/>UI<sp/>is<sp/>to<sp/>simply<sp/>use<sp/>EditorGUILayout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>simply<sp/>assign<sp/>the<sp/>changed<sp/>value<sp/>back<sp/>to<sp/>the<sp/>&apos;target&apos;<sp/>object.<sp/>The<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>system<sp/>will<sp/>automatically<sp/>detect<sp/>a<sp/>change<sp/>in<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.scaleFactor<sp/>=<sp/>EditorGUILayout.Slider(m_ScaleFactorLabel,<sp/>currentValue,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>GUIContent<sp/>m_ScaleFactorLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Scale<sp/>Factor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_SSDSPEEDUP/2021/clone/gps1_manadesigner/GPS1-Manadesigner/Assets/Samples/Input System/1.0.2/Custom Binding Composite/CustomComposite.cs"/>
  </compounddef>
</doxygen>
