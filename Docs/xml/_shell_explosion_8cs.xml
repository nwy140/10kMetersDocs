<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_shell_explosion_8cs" kind="file" language="C#">
    <compoundname>ShellExplosion.cs</compoundname>
    <innerclass refid="class_shell_explosion" prot="public">ShellExplosion</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_shell_explosion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_shell_explosion" kindref="compound">ShellExplosion</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6" refid="class_shell_explosion_1a7836a8802592e5b16960749293b7e8a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>LayerMask<sp/><ref refid="class_shell_explosion_1a7836a8802592e5b16960749293b7e8a1" kindref="member">m_TankMask</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>filter<sp/>what<sp/>the<sp/>explosion<sp/>affects,<sp/>this<sp/>should<sp/>be<sp/>set<sp/>to<sp/>&quot;Players&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_shell_explosion_1adfe43cddc71e351e3a44cc6a0e626de4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ParticleSystem<sp/><ref refid="class_shell_explosion_1adfe43cddc71e351e3a44cc6a0e626de4" kindref="member">m_ExplosionParticles</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>to<sp/>the<sp/>particles<sp/>that<sp/>will<sp/>play<sp/>on<sp/>explosion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_shell_explosion_1a71d680ca98a5c785614d96677dcc1017" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AudioSource<sp/><ref refid="class_shell_explosion_1a71d680ca98a5c785614d96677dcc1017" kindref="member">m_ExplosionAudio</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>to<sp/>the<sp/>audio<sp/>that<sp/>will<sp/>play<sp/>on<sp/>explosion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_shell_explosion_1a05ff4d14e0e711cfa6bdec9335d58256" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_shell_explosion_1a05ff4d14e0e711cfa6bdec9335d58256" kindref="member">m_MaxDamage</ref><sp/>=<sp/>100f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>amount<sp/>of<sp/>damage<sp/>done<sp/>if<sp/>the<sp/>explosion<sp/>is<sp/>centred<sp/>on<sp/>a<sp/>tank.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_shell_explosion_1aedf8145b8210b8be0bd077eab2adb184" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_shell_explosion_1aedf8145b8210b8be0bd077eab2adb184" kindref="member">m_ExplosionForce</ref><sp/>=<sp/>1000f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>amount<sp/>of<sp/>force<sp/>added<sp/>to<sp/>a<sp/>tank<sp/>at<sp/>the<sp/>centre<sp/>of<sp/>the<sp/>explosion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_shell_explosion_1a6a3f3ce0baaa7342c0a455f0d85a5cae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_shell_explosion_1a6a3f3ce0baaa7342c0a455f0d85a5cae" kindref="member">m_MaxLifeTime</ref><sp/>=<sp/>2f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>time<sp/>in<sp/>seconds<sp/>before<sp/>the<sp/>shell<sp/>is<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_shell_explosion_1a17648fa0f429b6dab061971065fe0344" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_shell_explosion_1a17648fa0f429b6dab061971065fe0344" kindref="member">m_ExplosionRadius</ref><sp/>=<sp/>5f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>distance<sp/>away<sp/>from<sp/>the<sp/>explosion<sp/>tanks<sp/>can<sp/>be<sp/>and<sp/>are<sp/>still<sp/>affected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>isn&apos;t<sp/>destroyed<sp/>by<sp/>then,<sp/>destroy<sp/>the<sp/>shell<sp/>after<sp/>it&apos;s<sp/>lifetime.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy(gameObject,<sp/><ref refid="class_shell_explosion_1a6a3f3ce0baaa7342c0a455f0d85a5cae" kindref="member">m_MaxLifeTime</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTriggerEnter(Collider<sp/>other)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collect<sp/>all<sp/>the<sp/>colliders<sp/>in<sp/>a<sp/>sphere<sp/>from<sp/>the<sp/>shell&apos;s<sp/>current<sp/>position<sp/>to<sp/>a<sp/>radius<sp/>of<sp/>the<sp/>explosion<sp/>radius.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collider[]<sp/>colliders<sp/>=<sp/>Physics.OverlapSphere(transform.position,<sp/><ref refid="class_shell_explosion_1a17648fa0f429b6dab061971065fe0344" kindref="member">m_ExplosionRadius</ref>,<sp/><ref refid="class_shell_explosion_1a7836a8802592e5b16960749293b7e8a1" kindref="member">m_TankMask</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>through<sp/>all<sp/>the<sp/>colliders...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>colliders.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>find<sp/>their<sp/>rigidbody.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rigidbody<sp/>targetRigidbody<sp/>=<sp/>colliders[i].GetComponent&lt;Rigidbody&gt;();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>they<sp/>don&apos;t<sp/>have<sp/>a<sp/>rigidbody,<sp/>go<sp/>on<sp/>to<sp/>the<sp/>next<sp/>collider.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!targetRigidbody)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>explosion<sp/>force.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRigidbody.AddExplosionForce(<ref refid="class_shell_explosion_1aedf8145b8210b8be0bd077eab2adb184" kindref="member">m_ExplosionForce</ref>,<sp/>transform.position,<sp/><ref refid="class_shell_explosion_1a17648fa0f429b6dab061971065fe0344" kindref="member">m_ExplosionRadius</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>TankHealth<sp/>script<sp/>associated<sp/>with<sp/>the<sp/>rigidbody.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tank_health" kindref="compound">TankHealth</ref><sp/>targetHealth<sp/>=<sp/>targetRigidbody.GetComponent&lt;<ref refid="class_tank_health" kindref="compound">TankHealth</ref>&gt;();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>TankHealth<sp/>script<sp/>attached<sp/>to<sp/>the<sp/>gameobject,<sp/>go<sp/>on<sp/>to<sp/>the<sp/>next<sp/>collider.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!targetHealth)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>amount<sp/>of<sp/>damage<sp/>the<sp/>target<sp/>should<sp/>take<sp/>based<sp/>on<sp/>it&apos;s<sp/>distance<sp/>from<sp/>the<sp/>shell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>damage<sp/>=<sp/>CalculateDamage(targetRigidbody.position);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>this<sp/>damage<sp/>to<sp/>the<sp/>tank.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetHealth.<ref refid="class_tank_health_1a5b4692ca0cdcd290c19819b612a1fb6a" kindref="member">TakeDamage</ref>(damage);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unparent<sp/>the<sp/>particles<sp/>from<sp/>the<sp/>shell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shell_explosion_1adfe43cddc71e351e3a44cc6a0e626de4" kindref="member">m_ExplosionParticles</ref>.transform.parent<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Play<sp/>the<sp/>particle<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shell_explosion_1adfe43cddc71e351e3a44cc6a0e626de4" kindref="member">m_ExplosionParticles</ref>.Play();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Play<sp/>the<sp/>explosion<sp/>sound<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shell_explosion_1a71d680ca98a5c785614d96677dcc1017" kindref="member">m_ExplosionAudio</ref>.Play();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>particles<sp/>have<sp/>finished,<sp/>destroy<sp/>the<sp/>gameobject<sp/>they<sp/>are<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParticleSystem.MainModule<sp/>mainModule<sp/>=<sp/><ref refid="class_shell_explosion_1adfe43cddc71e351e3a44cc6a0e626de4" kindref="member">m_ExplosionParticles</ref>.main;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy(<ref refid="class_shell_explosion_1adfe43cddc71e351e3a44cc6a0e626de4" kindref="member">m_ExplosionParticles</ref>.gameObject,<sp/>mainModule.duration);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>the<sp/>shell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy(gameObject);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CalculateDamage(Vector3<sp/>targetPosition)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>vector<sp/>from<sp/>the<sp/>shell<sp/>to<sp/>the<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>explosionToTarget<sp/>=<sp/>targetPosition<sp/>-<sp/>transform.position;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>distance<sp/>from<sp/>the<sp/>shell<sp/>to<sp/>the<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>explosionDistance<sp/>=<sp/>explosionToTarget.magnitude;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>proportion<sp/>of<sp/>the<sp/>maximum<sp/>distance<sp/>(the<sp/>explosionRadius)<sp/>the<sp/>target<sp/>is<sp/>away.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>relativeDistance<sp/>=<sp/>(<ref refid="class_shell_explosion_1a17648fa0f429b6dab061971065fe0344" kindref="member">m_ExplosionRadius</ref><sp/>-<sp/>explosionDistance)<sp/>/<sp/><ref refid="class_shell_explosion_1a17648fa0f429b6dab061971065fe0344" kindref="member">m_ExplosionRadius</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>damage<sp/>as<sp/>this<sp/>proportion<sp/>of<sp/>the<sp/>maximum<sp/>possible<sp/>damage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>damage<sp/>=<sp/>relativeDistance<sp/>*<sp/><ref refid="class_shell_explosion_1a05ff4d14e0e711cfa6bdec9335d58256" kindref="member">m_MaxDamage</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>minimum<sp/>damage<sp/>is<sp/>always<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>Mathf.Max(0f,<sp/>damage);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>damage;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_SSDSPEEDUP/2021/clone/gps1_manadesigner/GPS1-Manadesigner/Assets/Samples/Input System/1.0.2/Tanks Demo/TanksDemo/Scripts/Shell/ShellExplosion.cs"/>
  </compounddef>
</doxygen>
