.TH "GenericDictionary< TKey, TValue >" 3 "Sun Dec 12 2021" "10,000 meters below" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GenericDictionary< TKey, TValue > \- Generic Serializable Dictionary for Unity 2020\&.1\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IDictionary< TKey, TValue >, and ISerializationCallbackReceiver\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnBeforeSerialize\fP ()"
.br
.ti -1c
.RI "void \fBOnAfterDeserialize\fP ()"
.br
.ti -1c
.RI "void \fBAdd\fP (TKey key, TValue value)"
.br
.ti -1c
.RI "bool \fBContainsKey\fP (TKey key)"
.br
.ti -1c
.RI "bool \fBRemove\fP (TKey key)"
.br
.ti -1c
.RI "bool \fBTryGetValue\fP (TKey key, out TValue value)"
.br
.ti -1c
.RI "void \fBAdd\fP (KeyValuePair< TKey, TValue > pair)"
.br
.ti -1c
.RI "void \fBClear\fP ()"
.br
.ti -1c
.RI "bool \fBContains\fP (KeyValuePair< TKey, TValue > pair)"
.br
.ti -1c
.RI "void \fBCopyTo\fP (KeyValuePair< TKey, TValue >[] array, int arrayIndex)"
.br
.ti -1c
.RI "bool \fBRemove\fP (KeyValuePair< TKey, TValue > pair)"
.br
.ti -1c
.RI "IEnumerator< KeyValuePair< TKey, TValue > > \fBGetEnumerator\fP ()"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "TValue \fBthis[TKey key]\fP\fC [getset]\fP"
.br
.ti -1c
.RI "ICollection< TKey > \fBKeys\fP\fC [get]\fP"
.br
.ti -1c
.RI "ICollection< TValue > \fBValues\fP\fC [get]\fP"
.br
.ti -1c
.RI "int \fBCount\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBIsReadOnly\fP\fC [getset]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Generic Serializable Dictionary for Unity 2020\&.1\&. 

Simply declare your key/value types and you're good to go - zero boilerplate\&. 
.SH "Member Function Documentation"
.PP 
.SS "void \fBGenericDictionary\fP< TKey, TValue >\&.Add (KeyValuePair< TKey, TValue > pair)"

.SS "void \fBGenericDictionary\fP< TKey, TValue >\&.Add (TKey key, TValue value)"

.SS "void \fBGenericDictionary\fP< TKey, TValue >\&.Clear ()"

.SS "bool \fBGenericDictionary\fP< TKey, TValue >\&.Contains (KeyValuePair< TKey, TValue > pair)"

.SS "bool \fBGenericDictionary\fP< TKey, TValue >\&.ContainsKey (TKey key)"

.SS "void \fBGenericDictionary\fP< TKey, TValue >\&.CopyTo (KeyValuePair< TKey, TValue >[] array, int arrayIndex)"

.SS "IEnumerator< KeyValuePair< TKey, TValue > > \fBGenericDictionary\fP< TKey, TValue >\&.GetEnumerator ()"

.SS "void \fBGenericDictionary\fP< TKey, TValue >\&.OnAfterDeserialize ()"

.SS "void \fBGenericDictionary\fP< TKey, TValue >\&.OnBeforeSerialize ()"

.SS "bool \fBGenericDictionary\fP< TKey, TValue >\&.Remove (KeyValuePair< TKey, TValue > pair)"

.SS "bool \fBGenericDictionary\fP< TKey, TValue >\&.Remove (TKey key)"

.SS "bool \fBGenericDictionary\fP< TKey, TValue >\&.TryGetValue (TKey key, out TValue value)"

.SH "Property Documentation"
.PP 
.SS "int \fBGenericDictionary\fP< TKey, TValue >\&.Count\fC [get]\fP"

.SS "bool \fBGenericDictionary\fP< TKey, TValue >\&.IsReadOnly\fC [get]\fP, \fC [set]\fP"

.SS "ICollection<TKey> \fBGenericDictionary\fP< TKey, TValue >\&.Keys\fC [get]\fP"

.SS "TValue \fBGenericDictionary\fP< TKey, TValue >\&.this[TKey key]\fC [get]\fP, \fC [set]\fP"

.SS "ICollection<TValue> \fBGenericDictionary\fP< TKey, TValue >\&.Values\fC [get]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for 10,000 meters below from the source code\&.
